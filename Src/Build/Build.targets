<?xml version="1.0" encoding="utf-8"?>

<Project ToolsVersion="4.0" DefaultTargets="All" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <GenDir>$(MSBuildThisFileDirectory)..\..\Gen</GenDir>
        <DocDir>$(MSBuildThisFileDirectory)..\..\Doc</DocDir>
        <SrcDir>$(MSBuildThisFileDirectory)..\</SrcDir>
        <MSBuildCommunityTasksPath>.</MSBuildCommunityTasksPath>
        <Configuration Condition=" $(Configuration) == '' ">Release</Configuration>
    </PropertyGroup>

    <Import Project="$(SrcDir)\.build\MSBuild.Community.Tasks.Targets" />
    <UsingTask AssemblyFile="$(SrcDir)\packages\xunit.1.9.1\lib\net20\xunit.runner.msbuild.dll" TaskName="Xunit.Runner.MSBuild.xunit" />

    <!-- gets the value of AssemblyInformationVersionAttribute applied to an assembly -->
    <UsingTask
            TaskName="GetAssemblyInformationalVersion"
            TaskFactory="CodeTaskFactory"
            AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
        <ParameterGroup>
            <AssemblyFile Required="true" />
            <Version ParameterType="System.String" Output="true" />
        </ParameterGroup>

        <Task>
            <Using Namespace="System"/>
            <Using Namespace="System.Reflection"/>
            <Code Type="Fragment" Language="cs">
                <![CDATA[
                var assembly = Assembly.LoadFrom(AssemblyFile);
                var attribute = (AssemblyInformationalVersionAttribute)Attribute.GetCustomAttribute(assembly, typeof(AssemblyInformationalVersionAttribute));
                Version = attribute.InformationalVersion;
                ]]>
            </Code>
        </Task>
    </UsingTask>

    <Target Name="All" DependsOnTargets="Clean;Build;UnitTests;GenerateDocumentation;CreateArchives;CreateNuGetPackages"/>

    <Target Name="Clean">
        <MSBuild Projects="$(SrcDir)\HelperTrinity.sln" Properties="Configuration=$(Configuration)" Targets="Clean" BuildInParallel="True"/>
        <RemoveDir Directories="$(GenDir)" />
    </Target>

    <Target Name="Build">
        <MSBuild Projects="$(SrcDir)\HelperTrinity.sln" Properties="Configuration=$(Configuration)" Targets="Build" BuildInParallel="True"/>
    </Target>

    <Target Name="UnitTests">
        <MakeDir Directories="$(GenDir)\Tests" />

        <xunit Assembly="$(SrcDir)\Kent.Boogaart.HelperTrinity.UnitTests\bin\$(Configuration)\Kent.Boogaart.HelperTrinity.UnitTests.dll" Xml="$(GenDir)\Tests\Kent.Boogaart.HelperTrinity.UnitTests.xml" />
    </Target>

    <Target Name="GenerateDocumentation">
        <MakeDir Directories="$(GenDir)\Documentation" />

        <!--
        Build documentation. This relies on the following components being installed:
         - Latest Sandcastle (http://sandcastle.codeplex.com/)
         - Latest Sandcastle Help File Builder (http://shfb.codeplex.com/)
         - Any relevant updates to styles from Sandcastle Styles (http://sandcastlestyles.codeplex.com/)
        -->
        <MSBuild Projects="$(DocDir)\HelperTrinity.shfbproj"/>
        <OnError ExecuteTargets="GenerateDocumentationFailed"/>
    </Target>

    <Target Name="GenerateDocumentationFailed">
        <Error Text="Building documentation failed. Please ensure you have the following components installed: Latest Sandcastle (http://sandcastle.codeplex.com/), latest Sandcastle Help File Builder (http://shfb.codeplex.com/), any relevant updates to styles from Sandcastle Styles (http://sandcastlestyles.codeplex.com/). You may also need to log out and back in."/>
    </Target>

    <Target Name="CreateArchives" DependsOnTargets="GetVersion">
        <MakeDir Directories="$(GenDir)" Condition="!Exists('$(GenDir)')" />
        <RemoveDir Directories="$(GenDir)\Temp" />
        <MakeDir Directories="$(GenDir)\Temp" Condition="!Exists('$(GenDir)\Temp')" />

        <!-- zip source -->
        <CreateItem Include="..\..\**\*.*" Exclude="..\..\**\*.suo;..\..\**\*.csproj.user;..\..\**\*.gpState;..\..\**\bin\**;..\..\**\obj\**;..\..\**\.svn\**;..\..\Gen\**;..\..\.git\**">
            <Output ItemName="Source" TaskParameter="Include" />
        </CreateItem>
        <Zip ZipFileName="$(GenDir)\TheHelperTrinity-$(Version)-src.zip" WorkingDirectory="..\..\" ZipLevel="9" Files="@(Source)" />

        <!-- zip documentation -->
        <CreateItem Include="$(GenDir)\Documentation\The Helper Trinity.chm">
            <Output ItemName="DocFiles" TaskParameter="Include" />
        </CreateItem>
        <Zip ZipFileName="$(GenDir)\TheHelperTrinity-$(Version)-doc.zip" WorkingDirectory="$(GenDir)\Documentation\" ZipLevel="9" Files="@(DocFiles)" />

        <!-- zip binaries -->
        <CreateItem Include="$(SrcDir)\Kent.Boogaart.HelperTrinity\bin\$(Configuration)\*.*">
            <Output ItemName="BinFiles" TaskParameter="Include" />
        </CreateItem>
        <Copy SourceFiles="@(BinFiles)" DestinationFolder="$(GenDir)\Temp\" />
        <CreateItem Include="$(GenDir)\Temp\*.*">
            <Output ItemName="BinFilesCopy" TaskParameter="Include" />
        </CreateItem>
        <Zip ZipFileName="$(GenDir)\TheHelperTrinity-$(Version)-bin.zip" WorkingDirectory="$(GenDir)\Temp\" ZipLevel="9" Files="@(BinFilesCopy)" />
    </Target>

    <Target Name="CreateNuGetPackages" DependsOnTargets="GetVersion">
        <MakeDir Directories="$(GenDir)\NuGet"/>

        <ItemGroup>
            <Tokens Include="Version">
                <ReplacementValue>$(Version)</ReplacementValue>
            </Tokens>
        </ItemGroup>

        <!-- generate nuspec files from templates -->
        <TemplateFile Template="$(SrcDir)\HelperTrinity.nuspec.template" OutputFileName="$(GenDir)\NuGet\Kent.Boogaart.HelperTrinity.nuspec" Tokens="@(Tokens)"/>

        <!-- copy files into the appropriate locations -->
        <CreateItem Include="$(SrcDir)\Kent.Boogaart.HelperTrinity\bin\$(Configuration)\Kent.Boogaart.HelperTrinity.*">
            <Output ItemName="TheHelperTrinityFiles" TaskParameter="Include" />
        </CreateItem>
        <Copy SourceFiles="@(TheHelperTrinityFiles)" DestinationFolder="$(GenDir)\NuGet\lib\portable-win+net403+sl40+wp+Xbox40" />

        <CreateItem Include="$(SrcDir)\**\*.*" Exclude="$(SrcDir)\packages\**\*;$(SrcDir)\**\*.suo;$(SrcDir)\**\*.csproj.user;$(SrcDir)\**\*.gpState;$(SrcDir)\**\bin\**;$(SrcDir)\**\obj\**;$(SrcDir)\**\.svn\**">
            <Output ItemName="Source_Files" TaskParameter="Include" />
        </CreateItem>
        <Copy SourceFiles="@(Source_Files)" DestinationFolder="$(GenDir)\NuGet\src\%(RecursiveDir)"/>

        <!-- pack the nugets -->
        <Exec Command='"$(SrcDir)\packages\NuGet.Bootstrapper.2.2.1\tools\NuGet.exe" pack -symbols "$(GenDir)\NuGet\Kent.Boogaart.HelperTrinity.nuspec"' WorkingDirectory="$(GenDir)\NuGet"/>

        <Message Text="NuGet packages created but not published. Type 'msbuild Build.targets /t:PublishNuGetPackages' to publish." Importance="High"/>
    </Target>

    <!--
    this target does not execute automatically - it must be done explicitly
    -->
    <Target Name="PublishNuGetPackages" DependsOnTargets="GetVersion">
        <!-- symbol packages are automatically pushed too -->
        <Exec Command='"$(SrcDir)\packages\NuGet.Bootstrapper.2.2.1\tools\NuGet.exe" push "$(GenDir)\NuGet\Kent.Boogaart.HelperTrinity.$(Version).nupkg"'/>
    </Target>

    <!-- ensure the Version property is set appropriately -->
    <Target Name="GetVersion">
        <GetAssemblyInformationalVersion AssemblyFile="$(SrcDir)\Kent.Boogaart.HelperTrinity\bin\$(Configuration)\Kent.Boogaart.HelperTrinity.dll">
            <Output TaskParameter="Version" PropertyName="AssemblyInformationalVersion" />
        </GetAssemblyInformationalVersion>
        <CreateProperty Condition="$(Version) == ''" Value="$(AssemblyInformationalVersion)">
            <Output TaskParameter="Value" PropertyName="Version" />
        </CreateProperty>
    </Target>
</Project>